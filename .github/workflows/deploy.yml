name: Build application

on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: "Install dependencies"
      run: >
        git submodule init &&
        git submodule update --recursive &&
        sudo apt install libpulse-dev &&
        sudo apt install libuv1-dev &&
        git clone --recurse-submodules https://github.com/uNetworking/uWebSockets &&
        cd uWebSockets &&
        make &&
        sudo make install &&
        sudo cp ./uSockets/src/libusockets.h /usr/local/include &&
        sudo cp ./uSockets/uSockets.a /usr/local/lib

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ./build
        -DCMAKE_CXX_COMPILER=g++
        -DCMAKE_C_COMPILER=gcc
        -DCMAKE_BUILD_TYPE=Release
        -S ${{ github.workspace }}

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ./build --config Release
    
    - name: Package build artifacts
      run: |
        rm -rf ./build/CMakeFiles ./build/cmake_install.cmake ./build/Makefile ./build/CMakeCache.txt ./build/libs ./build/CMakeFiles 
        mkdir -p release
        rm -rf ./build/CMakeFiles
        cp ./build/* ./release/
        find ./release -printf "%P\n" | tar -czf release.tar.gz --no-recursion -C ./release -T -
    - uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release.tar.gz
        asset_name: linux-release.tar.gz
      
          
